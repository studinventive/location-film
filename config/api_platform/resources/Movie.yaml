# app/config/api_platform/resources/

App\Entity\Movie:
  attributes: 
    security: is_granted("ROLE_USER")
    formats: [jsonld, jsonhal, json, xml]   
    pagination_items_per_page: 10
    pagination_maximum_items_per_page: 20
    pagination_client_items_per_page: true
    validation_groups: ['write:Movie']
    denormalization_context:
      groups: [write:Movie]
    normalization_context:
      groups: [read:Movie:collection]

  collectionOperations:
    get: ~
    post: 
      # security: 'is_granted("ROLE_ADMIN")'
      normalization_context:
        groups: [write:Movie]
      openapi_context:
        summary: Admin Only.

  itemOperations:
    get:
      normalization_context:
        groups: [read:Movie:item, read:Movie:collection]
    put:
      security: 'is_granted("ROLE_ADMIN")'
      openapi_context:
        summary: Admin Only.
        responses:
            403:
              description: Access Denied
    patch:
      security: 'is_granted("ROLE_ADMIN")'
      openapi_context:
        summary: Admin Only.
        responses:
            403:
              description: Access Denied
    delete:
      security: 'is_granted("ROLE_ADMIN")'
      openapi_context:
        summary: Admin Only.
        responses:
            403:
              description: Access Denied